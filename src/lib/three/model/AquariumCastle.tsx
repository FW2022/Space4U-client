/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
    nodes: {
        ["13020_Aquarium_Castle"]: THREE.Mesh;
    };
    materials: {
        ["13020_Aquarium_Castle"]: THREE.MeshStandardMaterial;
    };
};

export function AquariumCastle({ ...props }: JSX.IntrinsicElements["group"]) {
    const group = useRef<THREE.Group>();
    const { nodes, materials } = useGLTF(
        "/models/Aquarium_Castle_v1/13020_Aquarium_Castle_v1_L1.gltf"
    ) as GLTFResult;

    useEffect(() => {
        group.current.children[0]["material"].transparent = true;
        group.current.children[0]["material"].opacity = 0.5;
    }, []);

    return (
        <group ref={group} {...props} dispose={null}>
            <mesh
                geometry={nodes["13020_Aquarium_Castle"].geometry}
                material={materials["13020_Aquarium_Castle"]}
            />
        </group>
    );
}

useGLTF.preload("/models/Aquarium_Castle_v1/13020_Aquarium_Castle_v1_L1.gltf");
